import{_ as i,c as e,o as t,a as s}from"./app.7818b0d9.js";const v=JSON.parse('{"title":"输入 Input","description":"","frontmatter":{},"headers":[{"level":2,"title":"虚拟摇杆","slug":"虚拟摇杆","link":"#虚拟摇杆","children":[{"level":3,"title":"创建摇杆 create_virtual_joystick","slug":"create-virtual-joystick","link":"#create-virtual-joystick","children":[]},{"level":3,"title":"摇杆属性 virtual_joystick_properties_accessors","slug":"virtual-joystick-properties-accessors","link":"#virtual-joystick-properties-accessors","children":[]},{"level":3,"title":"固定摇杆 set_virtual_joystick_position","slug":"set-virtual-joystick-position","link":"#set-virtual-joystick-position","children":[]},{"level":3,"title":"隐藏/显示摇杆 set_virtual_joystick_visible","slug":"set-virtual-joystick-visible","link":"#set-virtual-joystick-visible","children":[]}]}],"relativePath":"block3d/blocks-reference/input.md"}'),a={name:"block3d/blocks-reference/input.md"},l=s('<h1 id="输入-input" tabindex="-1">输入 Input <a class="header-anchor" href="#输入-input" aria-hidden="true">#</a></h1><p>该分类用于处理各种设备的输入。</p><nav class="table-of-contents"><ul><li><a href="#虚拟摇杆">虚拟摇杆</a><ul><li><a href="#create-virtual-joystick">创建摇杆 create_virtual_joystick</a></li><li><a href="#virtual-joystick-properties-accessors">摇杆属性 virtual_joystick_properties_accessors</a></li><li><a href="#set-virtual-joystick-position">固定摇杆 set_virtual_joystick_position</a></li><li><a href="#set-virtual-joystick-visible">隐藏/显示摇杆 set_virtual_joystick_visible</a></li></ul></li></ul></nav><h2 id="虚拟摇杆" tabindex="-1">虚拟摇杆 <a class="header-anchor" href="#虚拟摇杆" aria-hidden="true">#</a></h2><h3 id="create-virtual-joystick" tabindex="-1">创建摇杆 create_virtual_joystick <a class="header-anchor" href="#create-virtual-joystick" aria-hidden="true">#</a></h3><p>用于创建虚拟摇杆。该拼图会创建一个浏览器窗口大小的画布，画布浮在绘制场景的画布之上，所以对场景的所有交互都会被遮挡。画布上可以绘制2个虚拟摇杆，默认为动态类型。左侧的摇杆可能会被拼图编辑器挡住，可以考虑发布后调试或最大化视图区调试。</p><p>参数：</p><ul><li>位置 - 左或右</li><li>选项 - 配置选项</li></ul><h3 id="virtual-joystick-properties-accessors" tabindex="-1">摇杆属性 virtual_joystick_properties_accessors <a class="header-anchor" href="#virtual-joystick-properties-accessors" aria-hidden="true">#</a></h3><p>属性：</p><ul><li>偏移位置 - deltaPosition 获取位置的偏移值</li><li>仅限容器内 - limitToContainer 是否限制球头仅在摇杆容器范围内移动</li><li>是否按下 - pressed 是否摇杆已被按下</li><li>左右反转 - reverseLeftRight 设置或获取摇杆是否左右反转</li><li>上下反转 - reverseUpDown 设置或获取摇杆是否上下反转</li></ul><p>访问器：</p><ul><li>始终可见 - alwaysVisible 是否摇杆始终可见</li><li>容器大小 - containerSize 摇杆容器大小</li><li>球头大小 - puckSize 摇杆球头大小</li></ul><h3 id="set-virtual-joystick-position" tabindex="-1">固定摇杆 set_virtual_joystick_position <a class="header-anchor" href="#set-virtual-joystick-position" aria-hidden="true">#</a></h3><p>定义静态摇杆的位置。</p><h3 id="set-virtual-joystick-visible" tabindex="-1">隐藏/显示摇杆 set_virtual_joystick_visible <a class="header-anchor" href="#set-virtual-joystick-visible" aria-hidden="true">#</a></h3><p>设置摇杆是否可见。</p>',17),r=[l];function o(c,n,u,_,p,h){return t(),e("div",null,r)}const k=i(a,[["render",o]]);export{v as __pageData,k as default};
