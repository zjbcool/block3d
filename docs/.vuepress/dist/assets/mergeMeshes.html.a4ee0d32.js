import{_ as u,r as o,o as l,c as i,a as n,d as a,w as e,F as r,b as s,e as c}from"./app.090844ca.js";const k={},d=n("h1",{id:"\u5408\u5E76\u7F51\u683C-mergemeshes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5408\u5E76\u7F51\u683C-mergemeshes","aria-hidden":"true"},"#"),s(" \u5408\u5E76\u7F51\u683C MergeMeshes")],-1),v={class:"table-of-contents"},m=s("\u539F\u751F Babylon.js \u51FD\u6570"),b=s("\u4F7F\u7528\u4F60\u81EA\u5DF1\u7684\u5408\u5E76\u51FD\u6570"),y=s("\u5C06\u7F51\u683C\u4E0E\u6784\u9020\u5B9E\u4F53\u51E0\u4F55\u5408\u5E76"),f=c(`<h2 id="\u539F\u751F-babylon-js-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u539F\u751F-babylon-js-\u51FD\u6570" aria-hidden="true">#</a> \u539F\u751F Babylon.js \u51FD\u6570</h2><p>\u4F7F\u7528<code>Mesh</code>\u7C7B\u7684<code>MergeMeshes</code>\u9759\u6001\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u5C06\u4E00\u4E9B\u7F51\u683C\u5408\u5E76\u4E3A\u4E00\u4E2A\u5355\u4E00\u7684\u7F51\u683C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> newMesh <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>Mesh<span class="token punctuation">.</span><span class="token function">MergeMeshes</span><span class="token punctuation">(</span>arrayOfMeshes<span class="token punctuation">,</span> disposeSource<span class="token punctuation">,</span> allow32BitsIndices<span class="token punctuation">,</span> meshSubclass<span class="token punctuation">,</span> subdivideWithSubMeshes<span class="token punctuation">,</span> multiMultiMaterials<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">\u53C2\u6570</th><th style="text-align:left;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:left;">arrayOfMeshes</td><td style="text-align:left;">\u4E00\u4E2AMeshes\u7684\u6570\u7EC4\u3002\u5B83\u4EEC\u5E94\u8BE5\u90FD\u662F\u76F8\u540C\u7684\u6750\u8D28\u3002</td></tr><tr><td style="text-align:left;">disposeSource (\u53EF\u9009)</td><td style="text-align:left;">\u5F53\u4E3Atrue\u65F6\uFF08\u9ED8\u8BA4\uFF09\uFF0C\u6E90\u7F51\u683C\u5C06\u5728\u5B8C\u6210\u540E\u88AB\u5904\u7406\u6389\u3002</td></tr><tr><td style="text-align:left;">allow32BitsIndices (\u53EF\u9009)</td><td style="text-align:left;">\u5F53\u9876\u70B9\u7684\u603B\u548C &gt; 64k \u65F6\uFF0C\u5FC5\u987B\u5C06\u5176\u8BBE\u7F6E\u4E3A true\u3002</td></tr><tr><td style="text-align:left;">meshSubclass (\u53EF\u9009)</td><td style="text-align:left;">\u5982\u8BBE\u7F6E\uFF0C\u9876\u70B9\u63D2\u5165\u5230\u8FD9\u4E2AMesh\u4E2D\u3002\u7136\u540E\u7F51\u683C\u53EF\u4EE5\u88AB\u5408\u5E76\u5230\u4E00\u4E2AMesh\u5B50\u7C7B\u4E2D\u3002</td></tr><tr><td style="text-align:left;">subdivideWithSubMeshes (\u53EF\u9009)</td><td style="text-align:left;">\u5F53\u4E3A true\uFF08\u9ED8\u8BA4\u4E3A false\uFF09\u65F6\uFF0C\u5C06\u7F51\u683C\u7EC6\u5206\u4E3A\u5177\u6709\u7F51\u683C\u6E90\u7684 subMesh \u6570\u7EC4\u3002</td></tr><tr><td style="text-align:left;">multiMultiMaterials (\u53EF\u9009)</td><td style="text-align:left;">\u5F53\u4E3Atrue\uFF08\u9ED8\u8BA4\u4E3Afalse\uFF09\u65F6\uFF0C\u5BF9\u7F51\u683C\u8FDB\u884C\u7EC6\u5206\u5E76\u63A5\u53D7\u591A\u4E2A\u591A\u7EF4\u6750\u8D28\uFF0C\u5FFD\u7565<code>subdivideWithSubMeshes</code>\u3002</td></tr></tbody></table><p>\u7531\u4E8E<code>multiMultiMaterials</code>\u9ED8\u8BA4\u4E3Afalse\uFF0C\u5408\u5E76\u540E\u7684\u7F51\u683C\u5C06\u53EA\u6709\u4E00\u4E2A\u6750\u8D28\uFF08\u53D6\u81EA\u7B2C\u4E00\u4E2A\u7F51\u683C\uFF09\u3002</p>`,5),h={href:"https://playground.babylonjs.com/#INZ0Z0#5",target:"_blank",rel:"noopener noreferrer"},B=s("\u5408\u5E76\u7F51\u683C\u793A\u4F8B"),g=s("\u6709\u5173\u4F7F\u7528\u5408\u5E76\u7F51\u683C\u7684\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605"),w={href:"https://doc.babylonjs.com/divingDeeper/materials/using/multiMaterials",target:"_blank",rel:"noopener noreferrer"},M=s("\u6B64\u9875\u9762"),x=s("\u3002"),O=c(`<h2 id="\u4F7F\u7528\u4F60\u81EA\u5DF1\u7684\u5408\u5E76\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u4F60\u81EA\u5DF1\u7684\u5408\u5E76\u51FD\u6570" aria-hidden="true">#</a> \u4F7F\u7528\u4F60\u81EA\u5DF1\u7684\u5408\u5E76\u51FD\u6570</h2><p>\u5982\u679C\u4F60\u60F3\u7528\u4E00\u4E2A\u81EA\u5DF2\u5B9E\u73B0\u7684\u51FD\u6570\u5C06\u7F51\u683C\u5408\u5E76\u6210\u4E00\u4E2A\u65B0\u7684\u7F51\u683C\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u4F5C\u4E3A\u57FA\u7840\uFF0C\u5E76\u6839\u636E\u4F60\u7684\u9700\u8981\u8FDB\u884C\u6539\u8FDB\u3002</p><p>\u6CE8\u610F\uFF1A\u5C0F\u5FC3\uFF0C\u5F53\u4F60\u5408\u5E76\u514B\u9686\u7684\u7F51\u683C\u65F6\uFF0C\u4F60\u9700\u8981\u5728\u8C03\u7528\u8BE5\u51FD\u6570\u524D\u7528<code>computeWorldMatrix</code>\u66F4\u65B0\u7F51\u683C\u7684\u4E16\u754C\u77E9\u9635\u3002</p><p>\u6CE8\u610F\uFF1A\u672C\u6587\u6DB5\u76D6\u4E86\u5185\u90E8\u5408\u5E76\u7684\u8FC7\u7A0B\u3002\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528<code>BABYLON.VertexData</code>\u5BF9\u8C61\u548C\u5B83\u7684<code>merge()</code>\u51FD\u6570\u6765\u83B7\u5F97\u66F4\u7B80\u5355\u7684\u89E3\u51B3\u65B9\u6848\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">mergeMeshes</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">meshName<span class="token punctuation">,</span> arrayObj<span class="token punctuation">,</span> scene</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> arrayPos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayNormal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayUv <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayUv2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayColor <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayMatricesIndices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayMatricesWeights <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayIndice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> savedPosition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> savedNormal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> newMesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>meshName<span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> UVKind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> UV2Kind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> ColorKind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> MatricesIndicesKind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> MatricesWeightsKind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> arrayObj<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isVerticesDataPresent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>UVKind<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> UVKind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isVerticesDataPresent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>UV2Kind<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> UV2Kind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isVerticesDataPresent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>ColorKind<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> ColorKind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isVerticesDataPresent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>MatricesIndicesKind<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> MatricesIndicesKind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isVerticesDataPresent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>MatricesWeightsKind<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> MatricesWeightsKind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> arrayObj<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> ite <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> iter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    arrayPos<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>PositionKind<span class="token punctuation">)</span><span class="token punctuation">;</span>
    arrayNormal<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>NormalKind<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>UVKind<span class="token punctuation">)</span> arrayUv <span class="token operator">=</span> arrayUv<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>UVKind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>UV2Kind<span class="token punctuation">)</span> arrayUv2 <span class="token operator">=</span> arrayUv2<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>UV2Kind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ColorKind<span class="token punctuation">)</span> arrayColor <span class="token operator">=</span> arrayColor<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>ColorKind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>MatricesIndicesKind<span class="token punctuation">)</span> arrayMatricesIndices <span class="token operator">=</span> arrayMatricesIndices<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>MatricesIndicesKind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>MatricesWeightsKind<span class="token punctuation">)</span> arrayMatricesWeights <span class="token operator">=</span> arrayMatricesWeights<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>MatricesWeightsKind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> maxValue <span class="token operator">=</span> savedPosition<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span>

    arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">computeWorldMatrix</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> worldMatrix <span class="token operator">=</span> arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getWorldMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> ite <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ite <span class="token operator">!=</span> arrayPos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> ite <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> vertex <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>Vector3<span class="token punctuation">.</span><span class="token function">TransformCoordinates</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span>arrayPos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>ite<span class="token punctuation">]</span><span class="token punctuation">,</span> arrayPos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>ite <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arrayPos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>ite <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> worldMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
      savedPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vertex<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      savedPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vertex<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
      savedPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vertex<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> iter <span class="token operator">!=</span> arrayNormal<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> iter <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> vertex <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>Vector3<span class="token punctuation">.</span><span class="token function">TransformNormal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span>arrayNormal<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>iter<span class="token punctuation">]</span><span class="token punctuation">,</span> arrayNormal<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>iter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arrayNormal<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>iter <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> worldMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
      savedNormal<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vertex<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      savedNormal<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vertex<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
      savedNormal<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vertex<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> tmp <span class="token operator">=</span> arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getIndices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>it <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> tmp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arrayIndice<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tmp<span class="token punctuation">[</span>it<span class="token punctuation">]</span> <span class="token operator">+</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    arrayIndice <span class="token operator">=</span> arrayIndice<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    arrayObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>PositionKind<span class="token punctuation">,</span> savedPosition<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>NormalKind<span class="token punctuation">,</span> savedNormal<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayUv<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>UVKind<span class="token punctuation">,</span> arrayUv<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayUv2<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>UV2Kind<span class="token punctuation">,</span> arrayUv<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayColor<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>ColorKind<span class="token punctuation">,</span> arrayUv<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayMatricesIndices<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>MatricesIndicesKind<span class="token punctuation">,</span> arrayUv<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayMatricesWeights<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> newMesh<span class="token punctuation">.</span><span class="token function">setVerticesData</span><span class="token punctuation">(</span><span class="token constant">BABYLON</span><span class="token punctuation">.</span>VertexBuffer<span class="token punctuation">.</span>MatricesWeightsKind<span class="token punctuation">,</span> arrayUv<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  newMesh<span class="token punctuation">.</span><span class="token function">setIndices</span><span class="token punctuation">(</span>arrayIndice<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> newMesh<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C06\u7F51\u683C\u4E0E\u6784\u9020\u5B9E\u4F53\u51E0\u4F55\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u5C06\u7F51\u683C\u4E0E\u6784\u9020\u5B9E\u4F53\u51E0\u4F55\u5408\u5E76" aria-hidden="true">#</a> \u5C06\u7F51\u683C\u4E0E\u6784\u9020\u5B9E\u4F53\u51E0\u4F55\u5408\u5E76</h2><p>\u4F60\u4E5F\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528CSG\u7C7B\u7684\u51CF\u6CD5\u3001\u9006\u6CD5\u3001\u8054\u5408\u6CD5\u548C\u4EA4\u53C9\u6CD5\u6765\u6784\u9020\u590D\u6742\u7684\u7F51\u683C\u3002</p><p>\u4F8B\u5982\uFF0C\u5047\u8BBE\u4F60\u60F3\u521B\u5EFA\u4E00\u4E2A\u6709\u5185\u5F84\u548C\u5916\u5F84\u7684 &quot;\u7BA1\u9053 &quot;\u5F62\u72B6\uFF08\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u53EA\u662F\u4E00\u4E2A &quot;\u7BA1\u5B50&quot;\u7F51\u683C\uFF0C\u90A3\u662F\u4E00\u4E2A\u6CA1\u6709 &quot;\u539A\u5EA6 &quot;\u7684\u5F2F\u66F2\u5E73\u9762\uFF09\u3002\u8FD9\u53EF\u4EE5\u901A\u8FC7\u9996\u5148\u521B\u5EFA\u4E00\u4E2A &quot;\u5706\u67F1\u4F53 &quot;\u7F51\u683C\uFF0C\u7136\u540E\u4ECE\u5B83\u7684\u5185\u90E8\u51CF\u53BB\u4E00\u4E2A &quot;\u7BA1\u5B50 &quot;\u7F51\u683C\u6765\u6784\u5EFA\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createPipe</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">diamInner</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">diamOuter</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">scene</span><span class="token operator">:</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>Scene</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>Mesh <span class="token punctuation">{</span>
  <span class="token comment">// Create the outer wall using a Cylinder mesh</span>
  <span class="token keyword">const</span> mOuter <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>MeshBuilder<span class="token punctuation">.</span><span class="token function">CreateCylinder</span><span class="token punctuation">(</span>
    <span class="token string">&quot;mOuter&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">diameter</span><span class="token operator">:</span> diamOuter<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> length<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    scene<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Create the inner wall using a Tube mesh</span>
  <span class="token keyword">const</span> mInner <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>MeshBuilder<span class="token punctuation">.</span><span class="token function">CreateTube</span><span class="token punctuation">(</span>
    <span class="token string">&quot;mInner&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">radius</span><span class="token operator">:</span> diamInner <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sideOrientation</span><span class="token operator">:</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>Mesh<span class="token punctuation">.</span><span class="token constant">DOUBLESIDE</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    scene<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Create CSG objects from each mesh</span>
  <span class="token keyword">const</span> outerCSG <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span><span class="token constant">CSG</span><span class="token punctuation">.</span><span class="token function">FromMesh</span><span class="token punctuation">(</span>mOuter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> innerCSG <span class="token operator">=</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span><span class="token constant">CSG</span><span class="token punctuation">.</span><span class="token function">FromMesh</span><span class="token punctuation">(</span>mInner<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Create a new CSG object by subtracting the inner tube from the outer cylinder</span>
  <span class="token keyword">const</span> pipeCSG <span class="token operator">=</span> outerCSG<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>innerCSG<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Create the resulting mesh from the new CSG object</span>
  <span class="token keyword">const</span> mPipe <span class="token operator">=</span> pipeCSG<span class="token punctuation">.</span><span class="token function">toMesh</span><span class="token punctuation">(</span><span class="token string">&quot;mPipe&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Dispose of the meshes, no longer needed</span>
  mInner<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  mOuter<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  scene<span class="token punctuation">.</span><span class="token function">removeMesh</span><span class="token punctuation">(</span>mInner<span class="token punctuation">)</span><span class="token punctuation">;</span>
  scene<span class="token punctuation">.</span><span class="token function">removeMesh</span><span class="token punctuation">(</span>mOuter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Return the result</span>
  <span class="token keyword">return</span> mPipe<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),V={href:"https://playground.babylonjs.com/#L5T0DK",target:"_blank",rel:"noopener noreferrer"},N=s("CSG\u6D41\u7A0B\u793A\u4F8B");function _(L,j){const t=o("RouterLink"),p=o("ExternalLinkIcon");return l(),i(r,null,[d,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#\u539F\u751F-babylon-js-\u51FD\u6570"},{default:e(()=>[m]),_:1})]),n("li",null,[a(t,{to:"#\u4F7F\u7528\u4F60\u81EA\u5DF1\u7684\u5408\u5E76\u51FD\u6570"},{default:e(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#\u5C06\u7F51\u683C\u4E0E\u6784\u9020\u5B9E\u4F53\u51E0\u4F55\u5408\u5E76"},{default:e(()=>[y]),_:1})])])]),f,n("p",null,[n("a",h,[B,a(p)])]),n("p",null,[g,n("a",w,[M,a(p)]),x]),O,n("p",null,[n("a",V,[N,a(p)])])],64)}var C=u(k,[["render",_],["__file","mergeMeshes.html.vue"]]);export{C as default};
