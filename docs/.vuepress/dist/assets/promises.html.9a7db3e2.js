import{_ as l,r as o,o as u,c as i,a as n,d as a,w as p,F as r,b as s,e as c}from"./app.090844ca.js";const k={},d=n("h1",{id:"\u5F02\u6B65-promises",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F02\u6B65-promises","aria-hidden":"true"},"#"),s(" \u5F02\u6B65 Promises")],-1),m={class:"table-of-contents"},v=s("\u4ECB\u7ECD"),h=s("\u793A\u4F8B"),b=s("\u57FA\u7840\u7528\u6CD5"),f=s("\u591A\u4E2APromise\u94FE\u5F0F\u7528\u6CD5"),_=s("\u5BF9Promise\u4F7F\u7528async/await"),g=s("\u5E76\u884C\u52A0\u8F7D\u4E24\u4E2AglTF\u8D44\u4EA7"),y=n("h2",{id:"\u4ECB\u7ECD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4ECB\u7ECD","aria-hidden":"true"},"#"),s(" \u4ECB\u7ECD")],-1),w=s("\u4ECE v3.2 \u5F00\u59CB\uFF0C\u6211\u4EEC\u5F15\u5165\u4E86\uFF08\u5F53\u7136\u6CA1\u6709\u7834\u574F\u5411\u540E\u517C\u5BB9\u6027\uFF09\u4E00\u4E2A\u65B0\u6A21\u5F0F\uFF1Apromise\u3002\u8981\u4E86\u89E3\u6709\u5173 promise \u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u9605\u8BFB\u8FD9\u4E2A\u5F88\u68D2\u7684 "),x={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},B=s("MDN \u7F51\u7EDC\u6587\u6863"),q=c(`<p>\u7B80\u800C\u8A00\u4E4B\uFF0C\u5176\u57FA\u672C\u601D\u60F3\u662F\u4F9D\u9760Promise\uFF0C\u800C\u4E0D\u662F\u4EE5\u4E00\u79CD\u4E0D\u5BB9\u6613\u7EF4\u62A4\u7684\u65B9\u5F0F\u5904\u7406\u91D1\u5B57\u5854\u5F0F\u7684\u56DE\u8C03\u3002\u5173\u4E8E\u53EF\u79FB\u690D\u6027\uFF0CBabylon.js\u4E3A\u4E0D\u652F\u6301Promise\u7684\u6D4F\u89C8\u5668\u63D0\u4F9B\u4E86\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684polyfill\uFF0C\u6240\u4EE5\u4F60\u53EF\u4EE5\u653E\u5FC3\u4F7F\u7528\u3002</p><h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><h3 id="\u57FA\u7840\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u7840\u7528\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">BABYLON</span><span class="token punctuation">.</span>SceneLoader<span class="token punctuation">.</span><span class="token function">LoadAssetContainerAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://playground.babylonjs.com/scenes/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skull.babylon&quot;</span><span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    container<span class="token punctuation">.</span><span class="token function">addAllToScene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),A={href:"https://playground.babylonjs.com/#JA1ND3#63",target:"_blank",rel:"noopener noreferrer"},j=s("Promise\u793A\u4F8B"),L=c(`<h3 id="\u591A\u4E2Apromise\u94FE\u5F0F\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u591A\u4E2Apromise\u94FE\u5F0F\u7528\u6CD5" aria-hidden="true">#</a> \u591A\u4E2APromise\u94FE\u5F0F\u7528\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> xrPromise <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createDefaultXRExperienceAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xrPromise
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">xrExperience</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>SceneLoader<span class="token punctuation">.</span><span class="token function">AppendAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://playground.babylonjs.com/scenes/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skull.babylon&quot;</span><span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// xr resolved, skull added to the scene</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BF9promise\u4F7F\u7528async-await" tabindex="-1"><a class="header-anchor" href="#\u5BF9promise\u4F7F\u7528async-await" aria-hidden="true">#</a> \u5BF9Promise\u4F7F\u7528async/await</h3><p>\u6CE8\u610F\uFF1A\u4E0D\u662F\u6240\u6709\u7684\u6D4F\u89C8\u5668\u90FD\u652F\u6301\u8FD9\u4E2A\u529F\u80FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> helper <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createDefaultVRExperience</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> supported <span class="token operator">=</span> <span class="token keyword">await</span> helper<span class="token punctuation">.</span>webVRCamera<span class="token punctuation">.</span><span class="token function">useStandingMatrixAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>supported<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>SceneLoader<span class="token punctuation">.</span><span class="token function">AppendAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://playground.babylonjs.com/scenes/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skull.babylon&quot;</span><span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E76\u884C\u52A0\u8F7D\u4E24\u4E2Agltf\u8D44\u4EA7" tabindex="-1"><a class="header-anchor" href="#\u5E76\u884C\u52A0\u8F7D\u4E24\u4E2Agltf\u8D44\u4EA7" aria-hidden="true">#</a> \u5E76\u884C\u52A0\u8F7D\u4E24\u4E2AglTF\u8D44\u4EA7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> baseUrl <span class="token operator">=</span> <span class="token string">&quot;https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/&quot;</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token constant">BABYLON</span><span class="token punctuation">.</span>SceneLoader<span class="token punctuation">.</span><span class="token function">ImportMeshAsync</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> baseUrl <span class="token operator">+</span> <span class="token string">&quot;BoomBox/glTF/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BoomBox.gltf&quot;</span><span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span>meshes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token constant">BABYLON</span><span class="token punctuation">.</span>SceneLoader<span class="token punctuation">.</span><span class="token function">ImportMeshAsync</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> baseUrl <span class="token operator">+</span> <span class="token string">&quot;Avocado/glTF/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Avocado.gltf&quot;</span><span class="token punctuation">,</span> scene<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span>meshes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span>meshes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span>meshes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>scaling<span class="token punctuation">.</span><span class="token function">scaleInPlace</span><span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    scene<span class="token punctuation">.</span><span class="token function">createDefaultCameraOrLight</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scene<span class="token punctuation">.</span>activeCamera<span class="token punctuation">.</span>alpha <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),N={href:"https://playground.babylonjs.com/#U2KKMK#1",target:"_blank",rel:"noopener noreferrer"},P=s("\u4E00\u6B21\u52A0\u8F7D\u4E24\u4E2A\u8D44\u4EA7");function S(O,Y){const t=o("RouterLink"),e=o("ExternalLinkIcon");return u(),i(r,null,[d,n("nav",m,[n("ul",null,[n("li",null,[a(t,{to:"#\u4ECB\u7ECD"},{default:p(()=>[v]),_:1})]),n("li",null,[a(t,{to:"#\u793A\u4F8B"},{default:p(()=>[h]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u57FA\u7840\u7528\u6CD5"},{default:p(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#\u591A\u4E2Apromise\u94FE\u5F0F\u7528\u6CD5"},{default:p(()=>[f]),_:1})]),n("li",null,[a(t,{to:"#\u5BF9promise\u4F7F\u7528async-await"},{default:p(()=>[_]),_:1})]),n("li",null,[a(t,{to:"#\u5E76\u884C\u52A0\u8F7D\u4E24\u4E2Agltf\u8D44\u4EA7"},{default:p(()=>[g]),_:1})])])])])]),y,n("p",null,[w,n("a",x,[B,a(e)])]),q,n("p",null,[n("a",A,[j,a(e)])]),L,n("p",null,[n("a",N,[P,a(e)])])],64)}var M=l(k,[["render",S],["__file","promises.html.vue"]]);export{M as default};
