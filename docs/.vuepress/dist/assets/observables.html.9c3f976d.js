import{_ as l,r as c,o as i,c as u,a as n,d as a,w as p,F as r,b as s,e as o}from"./app.090844ca.js";const d={},k=n("h1",{id:"\u89C2\u5BDF\u5668-observables",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u89C2\u5BDF\u5668-observables","aria-hidden":"true"},"#"),s(" \u89C2\u5BDF\u5668 Observables")],-1),v={class:"table-of-contents"},b=s("\u5982\u4F55\u4F7F\u7528\u89C2\u5BDF\u5668"),m=s("\u4ECB\u7ECD"),h=s("\u89C2\u5BDF\u5668\u7684\u65B9\u6CD5\u548C\u5C5E\u6027"),f=s("\u521B\u5EFA\u89C2\u5BDF\u5668"),_=s("\u6DFB\u52A0\u89C2\u5BDF\u8005"),g=s("\u573A\u666F\u89C2\u5BDF\u5668"),y=s("\u57FA\u4E8E\u89C2\u5BDF\u5668\u7684\u5EF6\u65F6\u51FD\u6570"),O=s("setAndStartTimer"),B=s("Advanced Timer"),w=n("h2",{id:"\u5982\u4F55\u4F7F\u7528\u89C2\u5BDF\u5668",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5982\u4F55\u4F7F\u7528\u89C2\u5BDF\u5668","aria-hidden":"true"},"#"),s(" \u5982\u4F55\u4F7F\u7528\u89C2\u5BDF\u5668")],-1),j=n("p",null,"\u5BF9\u4E8E\u8BB8\u591A\u521B\u5EFABabylon.js\u9879\u76EE\u7684\u4EBA\u6765\u8BF4\uFF0C\u53EA\u9700\u8981GUI\u548C\u573A\u666F\u89C2\u5BDF\u5668\uFF0C\u5C24\u5176\u662F scene.onPointerObservable\u3002",-1),x=n("h2",{id:"\u4ECB\u7ECD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4ECB\u7ECD","aria-hidden":"true"},"#"),s(" \u4ECB\u7ECD")],-1),A=n("p",null,"Babylon.js\u63D0\u4F9B\u4E86\u5F88\u591A\u4E8B\u4EF6\uFF08\u5982scene.beforeRender\uFF09\uFF0C\u5728v2.4\u7248\u4E4B\u524D\uFF0C\u6CA1\u6709\u4E00\u4E2A\u7EDF\u4E00\u7684\u65B9\u6CD5\u6765\u5904\u7406\u5B83\u4EEC\u3002\u4ECEv2.4\u5F00\u59CB\uFF0C\u6211\u4EEC\u5F15\u5165\u4E86\uFF08\u5F53\u7136\u662F\u5728\u4E0D\u7834\u574F\u5411\u540E\u517C\u5BB9\u6027\u7684\u524D\u63D0\u4E0B\uFF09\u4E00\u79CD\u65B0\u7684\u6A21\u5F0F\uFF1A\u89C2\u5BDF\u5668 Observables\u3002",-1),T=n("p",null,"\u5B83\u6709\u4E24\u4E2A\u90E8\u5206\uFF1A\u89C2\u5BDF\u5668 Observable\u548C\u89C2\u5BDF\u8005 Observer\u3002\u89C2\u5BDF\u5668\u662F\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u4EE3\u8868\u4E00\u4E2A\u7ED9\u5B9A\u7684\u4E8B\u4EF6\uFF08\u6BD4\u5982beforeRender\uFF09\u3002\u60F3\u8BA9\u81EA\u5DF1\u7684\u4EE3\u7801\u5728\u54CD\u5E94\u8FD9\u79CD\u4E8B\u4EF6\u65F6\u8FD0\u884C\u7684\u7528\u6237\u4F1A\u7ED9\u76F8\u5E94\u7684\u89C2\u5BDF\u5668\u6CE8\u518C\u4E00\u4E2A\u89C2\u5BDF\u8005\u3002\u7136\u540E\uFF0C\u89C2\u5BDF\u5668\u7684\u804C\u8D23\u5C31\u662F\u5728\u9002\u5F53\u7684\u65F6\u5019\u6267\u884C\u89C2\u5BDF\u8005\u3002",-1),R=n("p",null,"\u5B9E\u73B0\u8005\u4F7F\u7528\u4E00\u4E2A\u89C2\u5BDF\u5668\u6765\u521B\u5EFA\u4E00\u4E2A\u5C5E\u6027\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u5C06\u89E6\u53D1\u6240\u6709\u6CE8\u518C\u7684\u89C2\u5BDF\u8005\u3002\u6CDB\u578BT\u88AB\u7528\u6765\u5C06\u7ED9\u5B9A\u7684\u6570\u636E\u7C7B\u578B\u4ECE\u89C2\u5BDF\u5668\u4F20\u8FBE\u7ED9\u89C2\u5BDF\u8005\u3002",-1),P=s("\u5927\u591A\u6570\u7528\u6237\u4F1A\u7B80\u5355\u5730\u5C06\u81EA\u5DF1\u7684\u89C2\u5BDF\u8005\u6DFB\u52A0\u5230Babylon.js\u63D0\u4F9B\u7684\u89C2\u5BDF\u5668s\u4E2D\u3002\u4F46\u4E5F\u53EF\u4EE5\u521B\u5EFA\u4F60\u81EA\u5DF1\u7684\u89C2\u5BDF\u5668\uFF08\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF09\u3002\u5BF9\u4E8E\u90A3\u4E9B\u60F3\u6DF1\u5165\u7814\u7A76\u7684\u4EBA\uFF0C\u8BF7\u770B"),C={href:"https://doc.babylonjs.com/typedoc/classes/babylon.observable",target:"_blank",rel:"noopener noreferrer"},I=s("API"),S=s("\u3002"),q={href:"https://playground.babylonjs.com/#6IGFM2",target:"_blank",rel:"noopener noreferrer"},E=s("\u81EA\u5B9A\u4E49\u89C2\u5BDF\u5668"),M=s(" - \u5728\u4E3B\u7403\u4F53\u4E0A\u6DFB\u52A0\u4E86\u4E00\u4E2A\u53EF\u89C2\u5BDF\u53D8\u91CF--onXChange\u3002\u4E24\u4E2A\u4ECE\u7403\u4F53\u548C\u5B83\u4EEC\u5FC5\u987B\u91C7\u53D6\u7684\u884C\u52A8\u6784\u6210\u4E86\u4E24\u4E2A\u89C2\u5BDF\u8005\uFF0C\u5F53\u89C2\u5BDF\u5230\u4E3B\u7403\u4F53\u7684X\u4F4D\u7F6E\u53D8\u5316\u65F6\uFF0C\u5B83\u4EEC\u4F1A\u505A\u51FA\u53CD\u5E94\u3002"),N=o('<h2 id="\u89C2\u5BDF\u5668\u7684\u65B9\u6CD5\u548C\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u89C2\u5BDF\u5668\u7684\u65B9\u6CD5\u548C\u5C5E\u6027" aria-hidden="true">#</a> \u89C2\u5BDF\u5668\u7684\u65B9\u6CD5\u548C\u5C5E\u6027</h2><p>\u5982\u4E0B\uFF1A</p><ul><li>add(): \u6DFB\u52A0\u4E00\u4E2A\u89C2\u5BDF\u8005</li><li>addOnce(): \u6DFB\u52A0\u4E00\u4E2A\u89C2\u5BDF\u8005\uFF0C\u8BE5\u89C2\u5BDF\u8005\u5C06\u88AB\u6267\u884C\u4E00\u6B21\uFF0C\u7136\u540E\u5220\u9664\u3002</li><li>remove(): \u5220\u9664\u4E00\u4E2A\u4E4B\u524D\u6CE8\u518C\u7684\u89C2\u5BDF\u8005\u3002</li><li>removeCallback(): \u4E0E\u4E0A\u8FF0\u76F8\u540C\uFF0C\u4F46\u7ED9\u51FA\u56DE\u8C03\uFF0C\u800C\u4E0D\u662F\u89C2\u5BDF\u8005\u5B9E\u4F8B\u3002</li><li>notifyObservers(): \u7528\u6765\u901A\u77E5\u6240\u6709\u6CE8\u518C\u7684\u89C2\u5BDF\u8005\u3002</li><li>notifyObserversWithPromise(): \u8C03\u7528\u5B83\u5C06\u6267\u884C\u6BCF\u4E2A\u56DE\u8C03\uFF0C\u671F\u7B49\u5B83\u662F\u4E00\u4E2Apromise\u6216\u8FD4\u56DE\u4E00\u4E2A\u503C\u3002\u5982\u679C\u5728\u94FE\u4E2D\u7684\u4EFB\u4F55\u5730\u65B9\u6709\u4E2A\u51FD\u6570\u5931\u8D25\u4E86\uFF0Cpromise\u5C06\u5931\u8D25\uFF0C\u6267\u884C\u5C06\u4E0D\u4F1A\u7EE7\u7EED\u3002</li><li>hasObservers\uFF1A\u4E00\u4E2A\u5C5E\u6027\uFF0C\u5982\u679C\u81F3\u5C11\u6709\u4E00\u4E2A\u89C2\u5BDF\u8005\u88AB\u6CE8\u518C\uFF0C\u5219\u8FD4\u56DEtrue\u3002</li><li>hasSpecificMask(mask)\uFF1A\u4E00\u4E2A\u51FD\u6570\uFF0C\u5982\u679C\u81F3\u5C11\u6709\u4E00\u4E2A\u89C2\u5BDF\u8005\u7528\u8FD9\u4E2Amask\u6CE8\u518C\uFF0C\u5219\u8FD4\u56DEtrue\u3002</li><li>clear(): \u7528\u4E8E\u79FB\u9664\u6240\u6709\u7684\u89C2\u5BDF\u8005</li><li>clone(): \u7B80\u5355\u5730\u514B\u9686\u5BF9\u8C61\uFF0C\u4F46\u4E0D\u5305\u62EC\u6CE8\u518C\u7684\u89C2\u5BDF\u8005\u3002</li></ul><p>\u9759\u6001\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><ul><li>FromPromise(): \u4ECE\u4E00\u4E2APromise\u4E2D\u521B\u5EFA\u4E00\u4E2A\u89C2\u5BDF\u5668\u3002</li></ul>',5),D=s("\u8BB8\u591ABabylon.js\u5BF9\u8C61\u6709\u4E00\u7CFB\u5217\u53EF\u7528\u7684\u89C2\u5BDF\u5668\u3002\u8FD9\u91CC\u662F\u4E00\u4E2A"),L={href:"https://doc.babylonjs.com/search?bjsq=observable",target:"_blank",rel:"noopener noreferrer"},U=s("\u65E0\u5E8F\u5217\u8868"),Y=s("\uFF0C\u6765\u81EA\u6587\u6863\u7684\u641C\u7D22\u5DE5\u5177\uFF0C\u5E76\u6709API\u7684\u94FE\u63A5\u3002"),F=o(`<h2 id="\u521B\u5EFA\u89C2\u5BDF\u5668" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u89C2\u5BDF\u5668" aria-hidden="true">#</a> \u521B\u5EFA\u89C2\u5BDF\u5668</h2><p>\u4E3A\u4E86\u7ED9Babylon.js\u63D0\u4F9B\u7684Observable\u6DFB\u52A0\u4E00\u4E2AObserver\uFF0C\u6CA1\u6709\u5FC5\u8981\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684Observable\uFF0C\u4F46\u4F60\u53EF\u80FD\u5E0C\u671B\u521B\u5EFA\u81EA\u5DF1\u7684Observable\u3002\u7279\u522B\u662F\uFF0CObservables\u5BF9\u4E8E\u8FDE\u63A5\u5916\u90E8\u5E93\u5230Babylon.js\u975E\u5E38\u6709\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> io <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;socket.io-client&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token function">io</span><span class="token punctuation">(</span><span class="token string">&quot;/admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> onConnectObservable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> text1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>GUI<span class="token punctuation">.</span>TextBlock</span><span class="token punctuation">;</span>

socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;connect&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  onConnectObservable<span class="token punctuation">.</span><span class="token function">notifyObservers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

onConnectObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  text1<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&quot;Connected&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u6709\u4E00\u4E2A\u5B9E\u7528\u65B9\u6CD5 Observable.FromPromise \u53EF\u4EE5\u4ECE Promise \u521B\u5EFA\u4E00\u4E2A Observable\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> onStatusObservable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">FromPromise</span><span class="token punctuation">(</span><span class="token function">axios</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

onStatusObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">statusText</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  text1<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&quot;Server status: &quot;</span> <span class="token operator">+</span> statusText<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA\u4F60\u81EA\u5DF1\u7684Observables\u53EF\u4EE5\u5E2E\u52A9\u51CF\u5C11\u4E0D\u540C\u7EC4\u4EF6\u4E4B\u95F4\u7684\u8026\u5408\u3002\u4F60\u53EF\u4EE5\u521B\u5EFA\u591A\u4E2A\u72EC\u7ACB\u7684\u7EC4\u4EF6\uFF0C\u7136\u540E\u7B80\u5355\u5730\u7528\u4E00\u4E2A\u7236\u7EC4\u4EF6\u5C06\u5B83\u4EEC\u8FDE\u63A5\u8D77\u6765\uFF0C\u800C\u4E0D\u662F\u7EC4\u4EF6\u7684\u5C42\u6B21\u7ED3\u6784\u76F8\u4E92\u4F9D\u8D56\u3002</p><h2 id="\u6DFB\u52A0\u89C2\u5BDF\u8005" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u89C2\u5BDF\u8005" aria-hidden="true">#</a> \u6DFB\u52A0\u89C2\u5BDF\u8005</h2><p>\u89C2\u5BDF\u8005 Observer \u7531\u4E00\u4E2A\u8BBE\u7F6E\u4E3A\u76D1\u542C\u89C2\u5BDF\u5668\u7684\u5BF9\u8C61\u548C\u5BF9\u89C2\u5BDF\u5668\u7684\u505A\u51FA\u54CD\u5E94\u7684\u5BF9\u8C61\u7EC4\u6210\u3002</p><p>\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u7403\u4F53\u548C\u5B83\u7684\u7F29\u653E\u53D8\u5316\u901A\u8FC7Observable.add()\u65B9\u6CD5\u521B\u5EFA\u4E86\u4E00\u4E2A\u89C2\u5BDF\u8005\u3002</p><p>\u8BBE\u7F6E\u89C2\u5BDF\u5668\uFF0C\u5728\u6BCF\u4E00\u5E27\u573A\u666F\u5F00\u59CB\u6E32\u67D3\u524D\u901A\u77E5\u5176\u89C2\u5BDF\u8005\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> alpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sphere<span class="token punctuation">.</span>scaling<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>

  alpha <span class="token operator">+=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),G={href:"https://playground.babylonjs.com/#UP2O8#0",target:"_blank",rel:"noopener noreferrer"},V=s("\u6DFB\u52A0\u89C2\u5BDF\u8005\u793A\u4F8B"),W=o(`<p>\u8981\u79FB\u9664\u4E00\u4E2A\u89C2\u5BDF\u8005\uFF0C\u4F60\u9700\u8981\u5728\u5B83\u7684\u521B\u5EFA\u8FC7\u7A0B\u4E2D\u5B58\u50A8\u5B83\uFF0C\u4EE5\u4FBF\u7528\u79FB\u9664\u6765\u5F15\u7528\u5B83\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u5728\u89C2\u5BDF\u8005\u88AB\u544A\u77E5\u7B2C\u4E00\u5E27\u6E32\u67D3\u4E4B\u524D\u5C31\u5C06\u5176\u5220\u9664\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> alpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> observer <span class="token operator">=</span> scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sphere<span class="token punctuation">.</span>scaling<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>

  alpha <span class="token operator">+=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),X={href:"https://playground.babylonjs.com/#UP2O8#1",target:"_blank",rel:"noopener noreferrer"},H=s("\u79FB\u9664\u89C2\u5BDF\u8005\u793A\u4F8B"),z=o(`<p>\u4E0B\u9762\u7684\u4F8B\u5B50\u5728\u6E32\u67D3\u5468\u671F\u4E2D\u5220\u9664\u4E86\u89C2\u5BDF\u8005\u3002\u7531\u4E8E\u4E0D\u53EF\u80FD\u5220\u9664\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u89C2\u5BDF\u8005\uFF0C\u6240\u4EE5\u9700\u8981\u68C0\u67E5\u89C2\u5BDF\u5668\u662F\u5426\u4ECD\u7136\u62E5\u6709\u89C2\u5BDF\u8005\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> alpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> observer <span class="token operator">=</span> scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sphere<span class="token punctuation">.</span>scaling<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>

  alpha <span class="token operator">+=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">.</span>hasObservers <span class="token operator">&amp;&amp;</span> alpha <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u573A\u666F\u89C2\u5BDF\u5668" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F\u89C2\u5BDF\u5668" aria-hidden="true">#</a> \u573A\u666F\u89C2\u5BDF\u5668</h2><p>TheBabylon.js\u573A\u666F\u5BF9\u8C61\u6709\u8D85\u8FC720\u4E2A\u89C2\u5BDF\u5668\uFF0C\u5728\u4E0D\u540C\u7684\u6761\u4EF6\u4E0B &quot;\u53D1\u5C04&quot;\u3002\u5B83\u4EEC\u4E2D\u7684\u5927\u591A\u6570\u5728\u6BCF\u4E00\u5E27/\u6E32\u67D3\u4E2D\u90FD\u4F1A\u88AB\u68C0\u67E5\uFF0C\u800C\u4E14\u662F\u4EE5\u4E00\u79CD\u786E\u5B9A\u7684/\u53EF\u9884\u6D4B\u7684\u987A\u5E8F\u6216\u6B21\u5E8F\u8FDB\u884C\u7684\u3002\u4E0B\u9762\u662F\u5728\u6BCF\u4E2A\u6E32\u67D3\u5FAA\u73AF\u4E2D\u68C0\u67E5\u7684\u573A\u666F\u89C2\u5BDF\u5668\u7684\u5217\u8868......\u6309\u7167\u5B83\u4EEC\u88AB\u68C0\u67E5\u7684\u987A\u5E8F\u3002</p><ul><li>onBeforeAnimationsObservable</li><li>onAfterAnimationsObservable</li><li>onBeforePhysicsObservable</li><li>onAfterPhysicsObservable</li><li>onBeforeRenderObservable</li><li>onBeforeRenderTargetsRenderObservable</li><li>onAfterRenderTargetsRenderObservable</li><li>onBeforeCameraRenderObservable</li><li>onBeforeActiveMeshesEvaluationObservable</li><li>onAfterActiveMeshesEvaluationObservable</li><li>onBeforeParticlesRenderingObservable</li><li>onAfterParticlesRenderingObservable</li><li>onBeforeRenderTargetsRenderObservable</li><li>onAfterRenderTargetsRenderObservable</li><li>onBeforeDrawPhaseObservable</li><li>onAfterDrawPhaseObservable</li><li>onAfterCameraRenderObservable</li><li>onAfterRenderObservable</li></ul><p>\u573A\u666F\u5BF9\u8C61\u8FD8\u6709\u89C2\u5BDF\u8005\uFF1AonReady\u3001onDataLoaded\u3001onDispose\uFF0C\u4F46\u5B83\u4EEC\u4E0D\u53D1\u751F\u5728\u6E32\u67D3/\u5E27\u5185\u3002</p>`,6),J=s("\u53E6\u5916\uFF0C\u5F53\u4F7F\u7528"),K={href:"https://doc.babylonjs.com/divingDeeper/animation/advanced_animations#deterministic-lockstep",target:"_blank",rel:"noopener noreferrer"},Q=s("deterministic lock step"),Z=s("\u65F6\uFF0C"),$={href:"https://doc.babylonjs.com/typedoc/classes/babylon.scene#onbeforestepobservable",target:"_blank",rel:"noopener noreferrer"},nn=s("onBeforeStepObservable"),sn=s("\u548C"),an={href:"https://doc.babylonjs.com/typedoc/classes/babylon.scene#onafterstepobservable",target:"_blank",rel:"noopener noreferrer"},en=s("onAfterStepObservable"),tn=s("\u662F\u53EF\u7528\u7684\u3002"),pn=s("\u7136\u800C\uFF0C\u6700\u6709\u7528\u7684\u89C2\u5BDF\u5668\u6216\u8BB8\u662F\u68C0\u67E5\u5C4F\u5E55\u6307\u9488\u53D1\u751F\u4E86\u4EC0\u4E48\uFF0C\u65E0\u8BBA\u662F\u7528\u9F20\u6807\u8FD8\u662F\u7528\u624B\u6307\u6216\u63A7\u5236\u5668\uFF0C"),on={href:"https://doc.babylonjs.com/typedoc/classes/babylon.scene#onpointerobservable",target:"_blank",rel:"noopener noreferrer"},cn=s("scene.onPointerObservable"),ln=s("\u3002\u5173\u4E8E\u8FD9\u4E2A\u95EE\u9898\u7684\u66F4\u591A\u7EC6\u8282\uFF0C\u8BF7\u770B"),un={href:"https://doc.babylonjs.com/divingDeeper/scene/interactWithScenes",target:"_blank",rel:"noopener noreferrer"},rn=s("Interactions HowTo"),dn=s("\u3002"),kn=o(`<h2 id="\u57FA\u4E8E\u89C2\u5BDF\u5668\u7684\u5EF6\u65F6\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u89C2\u5BDF\u5668\u7684\u5EF6\u65F6\u51FD\u6570" aria-hidden="true">#</a> \u57FA\u4E8E\u89C2\u5BDF\u5668\u7684\u5EF6\u65F6\u51FD\u6570</h2><p>\u4ECEBabylon 4.2\u5F00\u59CB\uFF0C\u589E\u52A0\u4E86\u4E00\u79CD\u4E3A\u51FD\u6570\u8BBE\u7F6E\u5EF6\u8FDF\u8C03\u7528\u7684\u65B0\u65B9\u6CD5\u3002\u8FD9\u4E2A\u65B9\u6CD5\u662F\u4F7F\u7528\u89C2\u5BDF\u5668\u6765\u8BA1\u7B97\u5EF6\u8FDF\u65F6\u95F4\u3002\u60F3\u60F3\u770B\uFF0C\u4E00\u4E2AsetTimeout\u51FD\u6570\uFF0C\u4F46\u5728babylon\u7684\u4E0A\u4E0B\u6587\u4E2D\u3002\u6700\u597D\u7684\u89E3\u91CA\u65B9\u6CD5\u662F\u5C55\u793A\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// classic set timeout:</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// code running here is not guaranteed to be called inside the render loop</span>
  <span class="token comment">// Actually, it is most likely that it will be called OUTSIDE the render loop</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// the new and simple way</span>
<span class="token constant">BABYLON</span><span class="token punctuation">.</span><span class="token function">setAndStartTimer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">contextObservable</span><span class="token operator">:</span> scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">,</span>
  <span class="token function-variable function">onEnded</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// code running here is guaranteed to run inside the beforeRender loop</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setandstarttimer" tabindex="-1"><a class="header-anchor" href="#setandstarttimer" aria-hidden="true">#</a> setAndStartTimer</h3><p>\u6B63\u5982\u4F60\u5728\u4F8B\u5B50\u4E2D\u6240\u770B\u5230\u7684\uFF0Cbabylon\u8BA1\u65F6\u5668\u662F\u4EE5\u4E00\u4E2A\u89C2\u5BDF\u5668\u4F5C\u4E3A\u4E0A\u4E0B\u6587\u3002\u8FD9\u4E2A\u89C2\u5BDF\u5668\u662F\u8FD9\u6BB5\u4EE3\u7801\u4E2D\u6700\u91CD\u8981\u7684\u90E8\u5206--\u89C2\u5BDF\u5668\u662F\u5269\u4F59\u65F6\u95F4\u51FD\u6570\u88AB\u8C03\u7528\u7684\u4E0A\u4E0B\u6587\uFF0C\u5B83\u8D1F\u8D23\u8BA1\u7B97\u5B8C\u6210\u524D\u7684delta\u65F6\u95F4\u3002\u7B80\u5355\u89E3\u91CA\u4E00\u4E0B\uFF0C\u8FD9\u4E9B\u662F\u6211\u4EEC\u4E4B\u524D\u5B9E\u73B0\u7684\u51FD\u6570\u7684\u6B65\u9AA4\u3002</p><ol><li>\u8BBE\u7F6Etime=0\uFF0C\u7ED9scene.onBeforeRenderObservable\u6DFB\u52A0\u4E00\u4E2A\u89C2\u5BDF\u8005\u3002</li><li>\u7B49\u5F85\u89C2\u5BDF\u8005\u88AB\u8C03\u7528\u3002</li><li>\u5728\u89C2\u5BDF\u8005\u4E2D - \u68C0\u67E5\u4ECE\u5F00\u59CB\u8BA1\u65F6\u4EE5\u6765\u7684\u65F6\u95F4\u662F\u5426\u5927\u4E8E\u8D85\u65F6\u65F6\u95F4</li><li>\u5982\u679C\u5426\uFF0C\u8F6C\u52302</li><li>\u5982\u679C\u662F\uFF0C\u5219\u8C03\u7528onEnded\uFF0C\u5220\u9664\u89C2\u5BDF\u8005\u3002</li><li>\u5B8C\u6210</li></ol><p>\u8BE5\u51FD\u6570\u7684API\u7684\u5B8C\u6574\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">BABYLON</span><span class="token punctuation">.</span><span class="token function">setAndStartTimer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">contextObservable</span><span class="token operator">:</span> scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">,</span>
  <span class="token function-variable function">breakCondition</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// this will check if we need to break before the timeout has reached</span>
    <span class="token keyword">return</span> scene<span class="token punctuation">.</span><span class="token function">isDisposed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onEnded</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// this will run when the timeout has passed</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onTick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// this will run</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onAborted</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// this function will run when the break condition has met (premature ending)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B63\u5982\u4F60\u6240\u7406\u89E3\u7684\uFF0C\u8FD9\u91CC\u53EF\u4EE5\u4F7F\u7528\u4EFB\u4F55\u89C2\u5BDF\u8005\uFF0C\u4F46\u662F\u6709\u4E9B\u89C2\u5BDF\u8005\u5E76\u6CA1\u6709\u4EC0\u4E48\u610F\u4E49\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u6211\u4EEC\u4F7F\u7528pointer down\u89C2\u5BDF\u5668\uFF0C\u90A3\u4E48\u5728\u4E0B\u4E00\u6B21\u8C03\u7528\u89C2\u5BDF\u5668\u4E4B\u524D\u53EF\u80FD\u9700\u8981\u5F88\u957F\u7684\u65F6\u95F4\uFF0C\u8FD9\u4F7F\u5F97\u5B83\u4E0D\u5207\u5B9E\u9645\u3002\u4F46\u662F\u5982\u679C\u4F60\u9700\u8981\u5728\u63A5\u4E0B\u6765\u76842\u5206\u949F\u5185\u5904\u7406pointer down\u7684\u8F93\u5165\uFF0C\u4F60\u5C31\u53EF\u4EE5\u8FD9\u6837\u4F7F\u7528\u5B83\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> gameIsOn <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token constant">BABYLON</span><span class="token punctuation">.</span><span class="token function">setAndStartTimer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">contextObservable</span><span class="token operator">:</span> scene<span class="token punctuation">.</span>onPointerObservable<span class="token punctuation">,</span>
    <span class="token literal-property property">observableParameters</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">mask</span><span class="token operator">:</span> <span class="token constant">BABYLON</span><span class="token punctuation">.</span>PointerEventTypes<span class="token punctuation">.</span><span class="token constant">POINTERDOWN</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">breakCondition</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// break if the game ended prior to this timeout</span>
        <span class="token keyword">return</span> <span class="token operator">!</span>gameIsOn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onEnded</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;time is over&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onTick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// data.payload is the pointerInfo object from the onPointerObservable</span>
        <span class="token function">doSomethingWithTheData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u66F4\u5B9E\u9645\u7684\u4F8B\u5B50\u53EF\u4EE5\u7528\u6765\u8BA9\u7528\u6237\u89E6\u6478\u67D0\u6837\u4E1C\u897F3\u79D2\uFF08\u540C\u65F6\u8868\u793A\u8BA1\u65703\u79D2\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> guiButton <span class="token operator">=</span> <span class="token comment">// created a GUI button</span>
<span class="token keyword">const</span> guiButtonMaterial <span class="token operator">=</span> <span class="token operator">...</span> <span class="token comment">// get the material</span>
<span class="token keyword">let</span> pressed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function-variable function">onPointerDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    pressed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token constant">BABYLON</span><span class="token punctuation">.</span><span class="token function">setAndStartTimer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token comment">// \u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F43s</span>
        <span class="token literal-property property">contextObservable</span><span class="token operator">:</span> scene<span class="token punctuation">.</span>onBeforeRenderObservable<span class="token punctuation">,</span>
        <span class="token function-variable function">breakCondition</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// break if no longer pressed</span>
            <span class="token keyword">return</span> <span class="token operator">!</span>pressed<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onEnded</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Button pressed!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// back to a black button</span>
            guiButtonMaterial<span class="token punctuation">.</span>diffuseColor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onTick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// turn it slowly green on each call to the registered observer</span>
            guiButtonMaterial<span class="token punctuation">.</span>diffuseColor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>completeRate<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onAborted</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// Aborted, back to a black button</span>
            guiButtonMaterial<span class="token punctuation">.</span>diffuseColor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

scene<span class="token punctuation">.</span><span class="token function-variable function">onPointerUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    pressed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="advanced-timer" tabindex="-1"><a class="header-anchor" href="#advanced-timer" aria-hidden="true">#</a> Advanced Timer</h3><p>\u9664\u4E86\u8FD9\u4E2A\u5FEB\u901F\u529F\u80FD\u5916\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528AdvancedTimer\u7C7B\uFF0C\u5B83\u5E26\u6765\u4E86\u66F4\u591A\u7684\u7075\u6D3B\u6027\uFF0C\u4F46\u4E5F\u66F4\u5570\u55E6\u3002\u8FD9\u4E2A\u5BF9\u8C61\u672C\u8EAB\u662F\u53EF\u91CD\u590D\u4F7F\u7528\u7684\uFF0C\u6240\u4EE5\u5B83\u6700\u7EC8\u53EF\u4EE5\u7701\u53BB\u4E00\u4E9B\u4E0D\u9700\u8981\u7684\u8C03\u7528\u548C\u5BF9\u8C61\u7684\u521B\u5EFA\u3002\u4E00\u4E2A\u4F7F\u7528AdvancedTimer\u7684\u4F8B\u5B50\u7C7B\u4F3C\u8FD9\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> guiButton <span class="token operator">=</span> <span class="token comment">// created a GUI button</span>
<span class="token keyword">const</span> guiButtonMaterial <span class="token operator">=</span> <span class="token operator">...</span> <span class="token comment">// get the material</span>
<span class="token keyword">const</span> advancedTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BABYLON<span class="token punctuation">.</span>AdvancedTimer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">contextObservable</span><span class="token operator">:</span> scene<span class="token punctuation">.</span>onBeforeRenderObservable
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
advancedTimer<span class="token punctuation">.</span>onEachCountObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// turn it slowly green on each call to the registered observer</span>
    guiButtonMaterial<span class="token punctuation">.</span>diffuseColor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>completeRate<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
advancedTimer<span class="token punctuation">.</span>onTimerAbortedObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Aborted, back to a black button</span>
    guiButtonMaterial<span class="token punctuation">.</span>diffuseColor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
advancedTimer<span class="token punctuation">.</span>onTimerEndedObservable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// back to a black button</span>
    guiButtonMaterial<span class="token punctuation">.</span>diffuseColor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Button pressed!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

scene<span class="token punctuation">.</span><span class="token function-variable function">onPointerDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    advancedTimer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

scene<span class="token punctuation">.</span><span class="token function-variable function">onPointerUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    advancedTimer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function vn(bn,mn){const t=c("RouterLink"),e=c("ExternalLinkIcon");return i(),u(r,null,[k,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#\u5982\u4F55\u4F7F\u7528\u89C2\u5BDF\u5668"},{default:p(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#\u4ECB\u7ECD"},{default:p(()=>[m]),_:1})]),n("li",null,[a(t,{to:"#\u89C2\u5BDF\u5668\u7684\u65B9\u6CD5\u548C\u5C5E\u6027"},{default:p(()=>[h]),_:1})]),n("li",null,[a(t,{to:"#\u521B\u5EFA\u89C2\u5BDF\u5668"},{default:p(()=>[f]),_:1})]),n("li",null,[a(t,{to:"#\u6DFB\u52A0\u89C2\u5BDF\u8005"},{default:p(()=>[_]),_:1})]),n("li",null,[a(t,{to:"#\u573A\u666F\u89C2\u5BDF\u5668"},{default:p(()=>[g]),_:1})]),n("li",null,[a(t,{to:"#\u57FA\u4E8E\u89C2\u5BDF\u5668\u7684\u5EF6\u65F6\u51FD\u6570"},{default:p(()=>[y]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#setandstarttimer"},{default:p(()=>[O]),_:1})]),n("li",null,[a(t,{to:"#advanced-timer"},{default:p(()=>[B]),_:1})])])])])]),w,j,x,A,T,R,n("p",null,[P,n("a",C,[I,a(e)]),S]),n("ul",null,[n("li",null,[n("a",q,[E,a(e)]),M])]),N,n("p",null,[D,n("a",L,[U,a(e)]),Y]),F,n("p",null,[n("a",G,[V,a(e)])]),W,n("p",null,[n("a",X,[H,a(e)])]),z,n("p",null,[J,n("a",K,[Q,a(e)]),Z,n("a",$,[nn,a(e)]),sn,n("a",an,[en,a(e)]),tn]),n("p",null,[pn,n("a",on,[cn,a(e)]),ln,n("a",un,[rn,a(e)]),dn]),kn],64)}var fn=l(d,[["render",vn],["__file","observables.html.vue"]]);export{fn as default};
