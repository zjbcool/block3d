import{_ as e,c as a,o as t,a as s}from"./app.3a59851a.js";const m=JSON.parse('{"title":"加载资产","description":"","frontmatter":{},"headers":[{"level":2,"title":"导出3D资产","slug":"导出3d资产","link":"#导出3d资产","children":[]},{"level":2,"title":"加载3D资产","slug":"加载3d资产","link":"#加载3d资产","children":[]},{"level":2,"title":"下一步","slug":"下一步","link":"#下一步","children":[]}],"relativePath":"block3d/start/3-load-assets.md"}'),d={name:"block3d/start/3-load-assets.md"},c=s('<h1 id="加载资产" tabindex="-1">加载资产 <a class="header-anchor" href="#加载资产" aria-hidden="true">#</a></h1><p>Block3D支持<code>.babylon</code>、<code>.gltf/.glb</code>、<code>.stl</code>、<code>.obj</code>格式的3D资产导入。在实际开发中，我们一般使用前面两种。<code>.babylon</code>是Block3D的默认3D资产格式；<code>.gltf/.glb</code>是通用的Web3D格式。</p><p>下面我们从Blender中以<code>.gltf/.glb</code>格式导出一组动画。</p><h2 id="导出3d资产" tabindex="-1">导出3D资产 <a class="header-anchor" href="#导出3d资产" aria-hidden="true">#</a></h2><p>我们从<a href="https://www.mixamo.com/" target="_blank" rel="noreferrer">Mixamo</a>网站下载一组<code>.fbx</code>格式的动画，包括：等待、跑步、后退、左移、右移。</p><p><img src="https://cdn.zjbku.com/start/load-asset.jpg" alt="load-asset"></p><p>注意，在下载的时候，只需要下载一个带蒙皮的fbx，其它的都只要骨骼就可以了。</p><p><img src="https://cdn.zjbku.com/start/load-asset-1.jpg" alt="load-asset-1"></p><p>然后，把所有fbx导入Blender。打开动作编辑器， 在动作列表中，可以看到所有加载进来的动画。</p><p><img src="https://cdn.zjbku.com/start/load-asset-2.jpg" alt="load-asset-2"></p><p>依次选择并<code>Push Down</code>到非线性动画编辑器的轨道上。</p><p><img src="https://cdn.zjbku.com/start/load-asset-3.jpg" alt="load-asset-3"></p><p>动画编辑完成！然后，只保留一套骨骼，其它的删除。保存，导出。导出设置保持默认，命名为<code>animation.glb</code>，保存到项目的<code>assets/scene</code>路径下。</p><p><img src="https://cdn.zjbku.com/start/load-asset-4.jpg" alt="load-asset-4"></p><h2 id="加载3d资产" tabindex="-1">加载3D资产 <a class="header-anchor" href="#加载3d资产" aria-hidden="true">#</a></h2><p>将软件切换到Block3D，从工具栏中将场景分类的<code>资产管理器assets_manager</code>拼图和<code>创建加载任务 scene_create_loading_task</code>拼图，拖拽到工作区。</p><p><img src="https://cdn.zjbku.com/start/scene-assets.jpg" alt="load-asset-5-1"></p><p>然后，像玩拼图游戏一样，将拼图像连接起来。注意在<code>创建加载任务 scene_create_loading_task</code>拼图的<code>地址</code>参数中添写正确的路径。</p><p><img src="https://cdn.zjbku.com/start/scene-assets-1.jpg" alt="load-asset-5-1"></p><p>最后一步，点击菜单栏的<code>执行</code>按钮，快捷键<code>Ctrl</code> + <code>E</code>。如果一切正常，视图区就会显示加载的3D资产，按住鼠标左键可以观察场景。也许你会发现一些问题：相机距离太远，角色背对着我们。继续跟着教程，问题会迎刃而解。</p><p><img src="https://cdn.zjbku.com/start/load-asset-8.jpg" alt="load-asset-8"></p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-hidden="true">#</a></h2><p>修改环境和相机。</p>',23),o=[c];function l(r,p,n,i,h,_){return t(),a("div",null,o)}const b=e(d,[["render",l]]);export{m as __pageData,b as default};
