import{_ as e,c as o,o as t,a as l}from"./app.0267f225.js";const u=JSON.parse('{"title":"循环 Loops","description":"","frontmatter":{},"headers":[{"level":2,"title":"controls_repeat_ext","slug":"controls-repeat-ext","link":"#controls-repeat-ext","children":[]},{"level":2,"title":"controls_whileUntil","slug":"controls-whileuntil","link":"#controls-whileuntil","children":[]},{"level":2,"title":"controls_for","slug":"controls-for","link":"#controls-for","children":[]},{"level":2,"title":"controls_forEach","slug":"controls-foreach","link":"#controls-foreach","children":[]},{"level":2,"title":"controls_flow_statements","slug":"controls-flow-statements","link":"#controls-flow-statements","children":[]}],"relativePath":"block3d/blocks-reference/loops.md"}'),r={name:"block3d/blocks-reference/loops.md"},c=l('<h1 id="循环-loops" tabindex="-1">循环 Loops <a class="header-anchor" href="#循环-loops" aria-hidden="true">#</a></h1><p>这类拼图用于执行循环操作。</p><nav class="table-of-contents"><ul><li><a href="#controls-repeat-ext">controls_repeat_ext</a></li><li><a href="#controls-whileuntil">controls_whileUntil</a></li><li><a href="#controls-for">controls_for</a></li><li><a href="#controls-foreach">controls_forEach</a></li><li><a href="#controls-flow-statements">controls_flow_statements</a></li></ul></nav><h2 id="controls-repeat-ext" tabindex="-1">controls_repeat_ext <a class="header-anchor" href="#controls-repeat-ext" aria-hidden="true">#</a></h2><p>重复执行<code>执行</code>插槽中的拼图，通过<code>次数</code>参数控制执行的次数。</p><h2 id="controls-whileuntil" tabindex="-1">controls_whileUntil <a class="header-anchor" href="#controls-whileuntil" aria-hidden="true">#</a></h2><p>当参数为<code>若为真</code>时，只要指定的条件为<code>true</code>，该拼图就会一直执行<code>执行</code>插槽中的拼图。相反，当参数为<code>若为假</code>时，该拼图在指定的条件值为<code>false</code>之后停止运行。</p><h2 id="controls-for" tabindex="-1">controls_for <a class="header-anchor" href="#controls-for" aria-hidden="true">#</a></h2><p>在满足<code>从</code> <code>到</code> <code>步进</code>所设定的条件下遍历数组，并针对数组中的每个元素执行<code>执行</code>槽中的拼图。</p><h2 id="controls-foreach" tabindex="-1">controls_forEach <a class="header-anchor" href="#controls-foreach" aria-hidden="true">#</a></h2><p>遍历数组，并针对数组中的每个元素执行<code>执行</code>槽中的拼图。每个迭代的元素可以通过自动创建的变量访问。</p><h2 id="controls-flow-statements" tabindex="-1">controls_flow_statements <a class="header-anchor" href="#controls-flow-statements" aria-hidden="true">#</a></h2><p>大多数循环会一直运行，直到满足终止条件或完成所有遍历。<code>controls_flow_statements</code>拼图为控制循环行为提供了额外的手段。<code>跳出循环</code>可以提前退出循环。<code>继续下个迭代</code>可以跳过当前迭代，以便开始循环的下一个迭代。</p>',13),a=[c];function n(s,d,i,h,_,f){return t(),o("div",null,a)}const m=e(r,[["render",n]]);export{u as __pageData,m as default};
